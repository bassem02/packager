package tn.wevioo.authentication.entities;
// Generated 13 avr. 2017 17:13:26 by Hibernate Tools 5.1.2.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Service generated by hbm2java
 */
@Entity
@Table(name = "service", catalog = "test_authentification_manager")
public class Service implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Long id;
	private Users usersByModifierId;
	private Users usersByCreatorId;
	private String description;
	private String name;
	private Date created;
	private Date modified;
	private Set<Caller> callers = new HashSet<Caller>(0);

	public Service() {
	}

	public Service(String name, Date created) {
		this.name = name;
		this.created = created;
	}

	public Service(Users usersByModifierId, Users usersByCreatorId, String description, String name, Date created,
			Date modified, Set<Caller> callers) {
		this.usersByModifierId = usersByModifierId;
		this.usersByCreatorId = usersByCreatorId;
		this.description = description;
		this.name = name;
		this.created = created;
		this.modified = modified;
		this.callers = callers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modifier_id")
	public Users getUsersByModifierId() {
		return this.usersByModifierId;
	}

	public void setUsersByModifierId(Users usersByModifierId) {
		this.usersByModifierId = usersByModifierId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator_id")
	public Users getUsersByCreatorId() {
		return this.usersByCreatorId;
	}

	public void setUsersByCreatorId(Users usersByCreatorId) {
		this.usersByCreatorId = usersByCreatorId;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "service")
	public Set<Caller> getCallers() {
		return this.callers;
	}

	public void setCallers(Set<Caller> callers) {
		this.callers = callers;
	}

}
