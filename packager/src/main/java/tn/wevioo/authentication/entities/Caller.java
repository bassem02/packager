package tn.wevioo.authentication.entities;
// Generated 13 avr. 2017 17:13:26 by Hibernate Tools 5.1.2.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Caller generated by hbm2java
 */
@Entity
@Table(name = "caller", catalog = "test_authentification_manager", uniqueConstraints = @UniqueConstraint(columnNames = "pass"))
public class Caller implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Long id;
	private Scope scope;
	private Service service;
	private Users usersByCreatorId;
	private Users usersByModifierId;
	private String conditionValue;
	private Date created;
	private Date modified;
	private String name;
	private String pass;
	private String passPhrase;
	private boolean testCondition;
	private Set<CallerWebService> callerWebServices = new HashSet<CallerWebService>(0);
	private Set<CallerServer> callerServers = new HashSet<CallerServer>(0);

	public Caller() {
	}

	public Caller(String conditionValue, Date created, String name, String pass, String passPhrase,
			boolean testCondition) {
		this.conditionValue = conditionValue;
		this.created = created;
		this.name = name;
		this.pass = pass;
		this.passPhrase = passPhrase;
		this.testCondition = testCondition;
	}

	public Caller(Scope scope, Service service, Users usersByCreatorId, Users usersByModifierId, String conditionValue,
			Date created, Date modified, String name, String pass, String passPhrase, boolean testCondition,
			Set<CallerWebService> callerWebServices, Set<CallerServer> callerServers) {
		this.scope = scope;
		this.service = service;
		this.usersByCreatorId = usersByCreatorId;
		this.usersByModifierId = usersByModifierId;
		this.conditionValue = conditionValue;
		this.created = created;
		this.modified = modified;
		this.name = name;
		this.pass = pass;
		this.passPhrase = passPhrase;
		this.testCondition = testCondition;
		this.callerWebServices = callerWebServices;
		this.callerServers = callerServers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "scope_id")
	public Scope getScope() {
		return this.scope;
	}

	public void setScope(Scope scope) {
		this.scope = scope;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "service_id")
	public Service getService() {
		return this.service;
	}

	public void setService(Service service) {
		this.service = service;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator_id")
	public Users getUsersByCreatorId() {
		return this.usersByCreatorId;
	}

	public void setUsersByCreatorId(Users usersByCreatorId) {
		this.usersByCreatorId = usersByCreatorId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modifier_id")
	public Users getUsersByModifierId() {
		return this.usersByModifierId;
	}

	public void setUsersByModifierId(Users usersByModifierId) {
		this.usersByModifierId = usersByModifierId;
	}

	@Column(name = "condition_value", nullable = false)
	public String getConditionValue() {
		return this.conditionValue;
	}

	public void setConditionValue(String conditionValue) {
		this.conditionValue = conditionValue;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "pass", unique = true, nullable = false)
	public String getPass() {
		return this.pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	@Column(name = "pass_phrase", nullable = false)
	public String getPassPhrase() {
		return this.passPhrase;
	}

	public void setPassPhrase(String passPhrase) {
		this.passPhrase = passPhrase;
	}

	@Column(name = "test_condition", nullable = false)
	public boolean isTestCondition() {
		return this.testCondition;
	}

	public void setTestCondition(boolean testCondition) {
		this.testCondition = testCondition;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "caller")
	public Set<CallerWebService> getCallerWebServices() {
		return this.callerWebServices;
	}

	public void setCallerWebServices(Set<CallerWebService> callerWebServices) {
		this.callerWebServices = callerWebServices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "caller")
	public Set<CallerServer> getCallerServers() {
		return this.callerServers;
	}

	public void setCallerServers(Set<CallerServer> callerServers) {
		this.callerServers = callerServers;
	}

}
