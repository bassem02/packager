package tn.wevioo.authentication.entities;
// Generated 13 avr. 2017 17:13:26 by Hibernate Tools 5.1.2.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Server generated by hbm2java
 */
@Entity
@Table(name = "server", catalog = "test_authentification_manager", uniqueConstraints = {
		@UniqueConstraint(columnNames = "ip"), @UniqueConstraint(columnNames = "name") })
public class Server implements java.io.Serializable {

	private Long id;
	private Users usersByModifierId;
	private Users usersByCreatorId;
	private Date created;
	private String ip;
	private Date modified;
	private String name;
	private Set<CallerServer> callerServers = new HashSet<CallerServer>(0);

	public Server() {
	}

	public Server(Date created, String ip) {
		this.created = created;
		this.ip = ip;
	}

	public Server(Users usersByModifierId, Users usersByCreatorId, Date created, String ip, Date modified, String name,
			Set<CallerServer> callerServers) {
		this.usersByModifierId = usersByModifierId;
		this.usersByCreatorId = usersByCreatorId;
		this.created = created;
		this.ip = ip;
		this.modified = modified;
		this.name = name;
		this.callerServers = callerServers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modifier_id")
	public Users getUsersByModifierId() {
		return this.usersByModifierId;
	}

	public void setUsersByModifierId(Users usersByModifierId) {
		this.usersByModifierId = usersByModifierId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator_id")
	public Users getUsersByCreatorId() {
		return this.usersByCreatorId;
	}

	public void setUsersByCreatorId(Users usersByCreatorId) {
		this.usersByCreatorId = usersByCreatorId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "ip", unique = true, nullable = false)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Column(name = "name", unique = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "server")
	public Set<CallerServer> getCallerServers() {
		return this.callerServers;
	}

	public void setCallerServers(Set<CallerServer> callerServers) {
		this.callerServers = callerServers;
	}

}
